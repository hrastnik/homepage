---
import * as cheerio from "cheerio";
import vetaNjamMenu from "../assets/veta-njam-menu.jpg";

async function getPineta() {
  const $ = await cheerio.fromURL(
    "https://www.pizzeria-pineta-labin.com.hr/restauracja/pizzeria-pineta-labin"
  );
  const menu = $("#menu-dnevna-ponuda-marendi");
  const dishElementList = menu.find("li");

  const dishList = dishElementList
    .map((_index, element) => {
      const elementCheerio = $(element);
      return {
        imageURL: elementCheerio.find("img").attr("src"),
        price: elementCheerio.find(".add-button").text().trim(),
        name: elementCheerio.find("h4").text().trim(),
      };
    })
    .toArray();

  return { dishList };
}

async function getLabineca() {
  const response = await fetch("https://www.facebook.com/labineca/", {
    headers: {
      accept: "text/html",
      "cache-control": "max-age=0",
      "sec-fetch-site": "same-origin",
    },
  });
  const html = await response.text();
  const imageRegex = /{"uri":[^}]*jpg[^}]*}/gm;
  const imageListRaw = html.match(imageRegex) ?? [];
  const imageListParsed = imageListRaw.map((image) => JSON.parse(image));

  const postImageList = imageListParsed
    .filter((image) => {
      return "width" in image && "height" in image && "uri" in image;
    })
    .filter((image) => {
      return 1600 < image.width && image.width < 1650;
    }) as { uri: string; width: number; height: number }[];

  const labinecaURI = postImageList[0]?.uri;

  return {
    menuURI: labinecaURI,
  };
}

async function getWeather() {
  // const $ = await cheerio.fromURL(
  //   "https://vrijeme.hr/3dslika2_print_tp.php?Code=Labin"
  // 	,{

  // 	}
  // );
  const response = await fetch(
    "https://prognoza.hr/3dslika2_print_tp.php?Code=Labin"
  );
  const html = await response.text();
  const $ = cheerio.load(html);
  const weatherHTML = $("table").first().parent().html();

  return { weatherHTML };
}

const [pineta, labineca, weather] = await Promise.allSettled([
  getPineta(),
  getLabineca(),
  getWeather(),
]);
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Local Favorites</title>
  </head>
  <body class="h-screen max-h-screen">
    <div
      class="flex flex-col h-screen max-h-screen w-screen bg-gray-100 text-gray-800 p-4"
    >
      {/* Header */}
      <header class="text-center mb-4">
        <h1 class="text-4xl font-bold text-gray-900">
          Lloyds digital dashboard
        </h1>
        <!-- <p class="text-lg text-gray-600">
          Discover the best dishes and menus at Pineta and Labineca.
        </p> -->
      </header>

      {/* Main content with grid */}
      <div class="parent flex flex-1 gap-4">
        {/* Pineta Section */}
        <div class="flex flex-1 gap-4">
          <div class="flex flex-1 flex-col bg-white shadow-lg rounded-lg p-2">
            <h2 class="text-2xl font-semibold text-gray-800 mb-2">Pineta</h2>
            <div class="flex-1 relative">
              <div
                class="absolute top-0 left-0 w-full h-full flex flex-col overflow-hidden"
              >
                <div class="marquee">
                  {
                    pineta.status === "fulfilled" &&
                      pineta.value.dishList.map((dish) => (
                        <>
                          <div class="flex items-center bg-gray-50 p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow">
                            {dish.imageURL ? (
                              <img
                                src={dish.imageURL}
                                alt={dish.name}
                                class="w-16 h-16 rounded-md object-cover mr-4"
                              />
                            ) : (
                              <div class="w-16 h-16 flex items-center justify-center bg-gray-200 text-gray-400 rounded-md mr-4">
                                No Image
                              </div>
                            )}
                            <div class="flex-1">
                              <h3 class="text-lg font-medium text-gray-700">
                                {dish.name}
                              </h3>
                              <p class="text-gray-500">{dish.price}</p>
                            </div>
                          </div>
                          <div class="h-4" />
                        </>
                      ))
                  }
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Labineca Section */}
        <div class="flex flex-col flex-1 bg-white shadow-lg rounded-lg p-2">
          <h2 class="text-2xl font-semibold text-gray-800 mb-2">Labineca</h2>
          {
            labineca.status === "fulfilled" && labineca.value.menuURI ? (
              <div class="flex-1 overflow-hidden relative">
                <img
                  src={labineca.value.menuURI}
                  alt="Labineca Menu"
                  class="absolute top-0 left-0 w-full h-full object-contain"
                />
              </div>
            ) : (
              <p class="text-gray-500 text-center">Menu image unavailable</p>
            )
          }
        </div>

        <!-- Section Veta Njam -->
        <div class="flex flex-1">
          <div
            class="flex flex-col flex-1 bg-white shadow-lg rounded-lg p-2 overflow-hidden"
          >
            <h2 class="text-2xl font-semibold text-gray-800 mb-2">Veta Njam</h2>

            <div class="flex-1 relative">
              <div class="absolute top-0 left-0 w-full h-full">
                <img
                  src={vetaNjamMenu.src}
                  alt="Veta Njam Menu"
                  class="w-full h-full object-contain menu-image"
                />
              </div>
            </div>
          </div>
        </div>

        <!-- Section radar -->
        <div
          class="flex-1 flex flex-col relative bg-white shadow-lg rounded-lg p-2"
        >
          <h2 class="text-2xl font-semibold text-gray-800 mb-2">Radar</h2>

          <div class="relative flex-1">
            <div class="absolute top-0 left-0 w-full h-full">
              <img
                src="https://vrijeme.hr/anim_goli.gif"
                alt="Vrijeme"
                class="w-full h-full object-contain"
              />
            </div>
          </div>
        </div>
      </div>

      <div class="flex mt-4 gap-4">
        {/* Live stream 1 Section */}
        <div class="flex-[2] flex justify-center items-center bg-white shadow-lg rounded-lg p-2">
          <iframe
            class="flex-1 w-auto"
            width="560"
            height="315"
            src="https://www.youtube.com/embed/VQPLiEHV-tM?si=qrB5qlyYn5bvjsGA&controls=0&autoplay=1"
            title="YouTube video player"
            frameborder="0"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
            referrerpolicy="strict-origin-when-cross-origin"
            allowfullscreen></iframe>
        </div>

        {/* Live stream 2 Section */}
        <div class="flex-[2] flex justify-center items-center bg-white shadow-lg rounded-lg p-2">
          <iframe
            class="flex-1 w-auto"
            width="560"
            height="315"
            src="https://www.youtube.com/embed/Q7cF-AckYgE?si=JJB9dhp2dJ-wJ_n7&controls=0&autoplay=1"
            title="YouTube video player"
            frameborder="0"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
            referrerpolicy="strict-origin-when-cross-origin"
            allowfullscreen></iframe>
        </div>

        <!-- Weather section -->
        <div class="flex-[5] flex">
          {
            weather.status === "rejected" ? (
              <div class="flex-1">
                <p class="text-gray-500 text-center">
                  Weather data is not available
                </p>
              </div>
            ) : (
              <div
                class="weather-table flex-1 bg-white shadow-lg rounded-lg p-2"
                set:html={weather.value.weatherHTML}
              />
            )
          }
        </div>
      </div>
    </div>
    <script>
      import { assert } from "../utils/assert";

      document.addEventListener("DOMContentLoaded", () => {
        const marquee = document.querySelector<HTMLDivElement>(".marquee");
        assert(marquee, "No marquee element found");

        if (marquee.clientHeight === 0) {
          console.warn("Marquee height is 0, skipping cloning");
          return;
        }

        const firstParent = marquee.parentElement;
        assert(firstParent, "No firstParent element found");
        const parent = firstParent.parentElement;
        assert(parent, "No parent element found");

        const innerItems = marquee.innerHTML;
        marquee.innerHTML += innerItems;

        let safety = 30;
        while (marquee.scrollHeight < parent.clientHeight * 2) {
          if (safety-- < 0) {
            console.warn("Safety limit reached, exiting loop");
            break;
          }

          // We need to double the inner items beacuse we are using translateY(-50%)
          // Otherwise, the marquee would glitch when it reaches the middle point
          marquee.innerHTML += innerItems;
          marquee.innerHTML += innerItems;
        }

        const setAnimationDuration = () => {
          const duration = marquee.scrollHeight / 100 + "s";
          marquee.style.animationDuration = duration;
        };

        setAnimationDuration();

        // Handle resize
        window.addEventListener("resize", () => {
          marquee.innerHTML = "";
          let safety = 30;

          while (marquee.scrollHeight < parent.clientHeight * 2) {
            if (safety-- < 0) {
              console.warn("Safety limit reached, exiting loop");
              break;
            }

            marquee.innerHTML += innerItems;
            marquee.innerHTML += innerItems;
          }

          setAnimationDuration();
        });
      });
    </script>
    <style is:global>
      .marquee {
        animation: scroll linear infinite;
      }
      @keyframes scroll {
        0% {
          transform: translateY(0);
        }
        100% {
          transform: translateY(-50%);
        }
      }

      .menu-image {
        filter: grayscale(100%) contrast(200%) brightness(150%);
      }

      /* Weather */
      .weather-table table {
        width: 100%;
        height: 100%;
      }
      .weather-table tr,
      .weather-table td {
        text-align: center;
        vertical-align: middle;
      }

      .weather-table td span {
        display: flex;
        justify-self: center;
        align-items: center;
      }

      .weather-table table img {
        width: 3vh;
        height: 3vh;
      }

      /* Every third tr, but after the first one... So with indexes 4,7,10... */
      .weather-table tr:nth-child(3n + 1):not(:first-child) > td img {
        height: 8px;
        opacity: 0;
      }

      /* Rows with index 2,3,4 should be gray, then 5,6,7 should be white, then 8,9,10 gray etc  */
      .weather-table tr:nth-child(6n + 2):not(:first-child),
      .weather-table tr:nth-child(6n + 3):not(:first-child),
      .weather-table tr:nth-child(6n + 4):not(:first-child) {
        background-color: #f3f4f6;
      }
    </style>
  </body>
</html>
